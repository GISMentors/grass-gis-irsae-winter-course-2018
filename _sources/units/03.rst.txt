Unit 03 - Data Management
=========================

Data can be imported simply from toolbar by tools dedicated for
:wikipedia:`raster <GIS_file_formats#Raster>` or :wikipedia:`vector
<GIS_file_formats#Vector>` GIS data formats |grass-layer-import|. Basic
knowledge of commonly used :wikipedia:`GIS file formats` is required.

.. note:: GRASS terminology differs from commonly used GIS
          packages. To avoid confusion let's focus on the most
          important terms. Commonly used term "a layer" is called in
          GRASS "a map". GRASS layer is subset of features with one
          "map". So "GRASS raster map" can be treated as "a raster
          layer" in other GIS packages.
          
          
Import GIS data
---------------

.. _import-raster-section:

Raster data
^^^^^^^^^^^

Let's start with data file used for creating our project location in
:doc:`02`. :file:`L2A_T32VNM_20170705T105031_B04_10m.jp2` is a
:wikipedia:`JPEG2000` file, which is nowadays commonly used GIS
*raster* format for imagery data.

.. figure:: ../images/units/03/import-raster-toolbar.png

   Import raster data from the main toolbar.

.. note:: Dialog for importing raster data is also accessible from
   menu :menuselection:`File --> Import raster data --> Simplified
   raster import with reprojection` or from command line by
   :grasscmd:`r.import` module.

Import dialog allows importing single vector file (:item:`File`) or
multiple files from directory (:item:`Directory`). In our case single
file is planned to be imported, we keep default data source
(:item:`File`).

.. figure:: ../images/units/03/import-raster-dialog.svg

   Dialog for importing raster file(s).

.. important:: If a spatial reference system (SRS) of raster file
   differs from GRASS location (:item:`Project match`) input raster
   data are automatically reprojected into SRS of current GRASS
   location. Note that GRASS simply does not support on the fly
   transformation from several reasons.

.. _import-no-srs:

.. note:: In some cases SRS of imported file can be missing or
          invalid. GRASS reports this issue as *In case of no
          significant differences in the projection definitions, use
          the -o flag to ignore them and use current location
          definition.  Consider generating a new location from the
          input dataset using the 'location' parameter.*

          GRASS allows importing such file by overriding project check
          (if you are really sure that SRS of input file is the same
          as GRASS location).

          .. figure:: ../images/units/03/override-projection-check.svg

             Override projection check to force import.

After successful operation imported data layer should be automatically
displayed in Map Window.

.. figure:: ../images/units/03/sentinel.png
   :class: large
           
   Imported Sentinel band displayed in Map Window.

.. _rgb_bands:

.. note:: GRASS imports/links RGB image as separate bands. Color
   composition can be displayed using :grasscmd:`d.rgb`. By
   :grasscmd:`r.composite` it is possible to create color composite as
   a new raster map.

.. _import-vector-section:

Vector data
^^^^^^^^^^^

Norway administrative regions are stored in
:file:`~/geodata/counties/Basisdata_0000_Norge_25833_Fylker_GML.gml`
:wikipedia:`GML` file, which is a commonly used GIS exchange *vector*
format.

.. figure:: ../images/units/03/import-vector-toolbar.png

   Import vector data from the main toolbar.

.. note:: Dialog for importing vector data is also accessible from
   menu :menuselection:`File --> Import vector data --> Simplified
   vector import with reprojection` or from command line by
   :grasscmd:`v.import` module.

.. _import-vector:

.. figure:: ../images/units/03/import-vector-dialog.svg

   Dialog for importing vector file(s). Input file
   :file:`Basisdata_0000_Norge_25833_Fylker_GML.gml` contains several
   layers, we choose "Fylke" (administrative regions) to import.

In this case appearently SRS of input data layer and current GRASS
location differs (see :item:`Project match: No` on
:numref:`import-vector`), reprojection of input data will be
requested.

.. figure:: ../images/units/03/import-vector-reproject.png
   :class: small
   
   Reprojection needs to be confirmed by a user by :item:`Import &
   reproject`.

After successful operation imported data layer should be automatically
displayed in map window.

.. figure:: ../images/units/03/fylke.png
   :class: large
           
   Imported Norway administrative regions.

.. _vector-topo-section:

Vector topology
^^^^^^^^^^^^^^^

Let's take a closer look at vector metadata of imported administrative
regions. Instead of "polygons" there are "areas" and other kind of
primitites (points, lines, boundaries, centroids, isles), see
:numref:`vector-metadata`.

.. _vector-metadata:

.. figure:: ../images/units/03/vector-metadata-features.png

   Vector metadata of imported file.

GRASS GIS is a **topological GIS**. Importing vector data into GRASS also
means converting features from simple feature model (points,
linestrings, polygons, ...) into GRASS topological model.

.. figure:: ../images/units/03/grass7-topo.png
   :class: middle
                    
   GRASS topological model with primitives (nodes, lines,
   boundaries, centroids, areas, and isles).

Topological errors are checked and repaired by GRASS GIS when
importing data, be awere of :param:`snap` option of
:grasscmd:`v.import` module. Topological errors which is not possible
repair automatically without user specification can fixed using
:grasscmd:`v.clean` module.

.. _work-organization-section:

Work organization
-----------------

GRASS GIS allows organizing work within one project (GRASS location) by
creating different **mapsets**, see :ref:`Unit 02
<location-mapset-section>`. In the next units various analysis will be
performed in "Oslo" region. Let's create a new mapset called "oslo"
for upcoming work.

Create a new mapset
^^^^^^^^^^^^^^^^^^^

A new mapset can be created by :grasscmd:`g.mapset` or from menu
:menuselection:`Settings --> GRASS working environment --> Create new
mapset`.

.. figure:: ../images/units/03/create-mapset.png
   :class: small
                    
   Create a new mapset.

.. note:: A new mapset can be created from command line by
   :grasscmd:`g.mapset`.

   .. code-block:: bash

      g.mapset -c mapset=oslo

Switch to existing mapset
^^^^^^^^^^^^^^^^^^^^^^^^^

Current mapset can be changed from menu :menuselection:`Settings -->
GRASS working environment --> Change mapset` or from command line by
:grasscmd:`g.mapset`.

Querying data
-------------

Imported raster or vector data layers can be iteractively queried by
|grass-info| from Map Window toolbar.

.. figure:: ../images/units/03/query-map-window.png
           
   Query interactively Norway administrative regions.

Vector data layers (GRASS vector maps) can be queried also by
attribute filters using Attribute Table Manager |grass-table|.

.. figure:: ../images/units/03/show-attrb-data-menu.png
           
   Open Attribute Table Manager from layer menu.

Vector features can be queried by simple SQL queries by WHERE
statement.

.. figure:: ../images/units/03/simple-query.png
           
   Simple attribute querying.

.. tip:: GRASS offers also interactive tool for attribute querying
         similarly to other GIS packages. The tool accessible from
         :item:`Builder` tab as :item:`SQL Builder`.

         .. figure:: ../images/units/03/advanced-query.svg
           
            Open SQL Builder.

         .. figure:: ../images/units/03/sql-builder.png
            :class: small
            
            SQL Builder in action.
            
Selected vector objects (commonly refered as "features" in GIS
terminology) can be saved into new layer (GRASS vector map) from menu
by :menuselection:`Extract selected features`.

.. figure:: ../images/units/03/extract-menu.png
   :class: large
   
   Extract selected features into a new vector map.

Created vector map is automatically added into Layer Tree. Switch
visibility of map layers by checkboxes and zoom to currently selected
map (:map:`oslo`) by |grass-zoom-extent| as shown on :numref:`oslo-region`.

.. _oslo-region:

.. figure:: ../images/units/03/oslo-region.svg
   :class: large
   
   Oslo region and Sentinel band displayed in Map Window.

Let's change symbology of Oslo polygon vector map.

.. figure:: ../images/units/03/layer-props.png

   Open map layer properties from menu. Properties dialog can be open
   also simply by double-clicking on map layer item.

Feature outline and fill color can be changed in :item:`Colors` tab.

.. figure:: ../images/units/03/d-vect.png

   Change polygon outline color. Fill color set to transparent. Line
   width can be changed in :item:`Lines` tab.

.. figure:: ../images/units/03/oslo-sentinel.png
   :class: large
           
   Example of vizualization of map layers composition.
